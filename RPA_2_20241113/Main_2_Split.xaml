<Activity mc:Ignorable="sap sap2010" x:Class="Main_2" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.IO</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.Numerics</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main_2" sap:VirtualizedContainerService.HintSize="1254,8454" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="str_originalFile" />
      <Variable x:TypeArguments="x:Boolean" Name="bol_department" />
      <Variable x:TypeArguments="x:String" Name="str_fileName" />
      <Variable x:TypeArguments="x:Int32" Name="int_emptyRow" />
      <Variable x:TypeArguments="x:String" Name="str_stuIDIndex" />
      <Variable x:TypeArguments="x:String" Name="str_filePath" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_info" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="808,872" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="484,713" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" SensitivityLabel="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="450,653" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" SensitivityOperation="None" WorkbookPath="Input\\교육이수자 명단.xls">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="416,361" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelReadRange AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="382,92" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" Range="A2" SheetName="총괄">
                      <ui:ExcelReadRange.DataTable>
                        <OutArgument x:TypeArguments="sd:DataTable">
                          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">dt_info</CSharpReference>
                        </OutArgument>
                      </ui:ExcelReadRange.DataTable>
                    </ui:ExcelReadRange>
                    <ui:RemoveDataRow Row="{x:Null}" DisplayName="Remove Data Row" sap:VirtualizedContainerService.HintSize="382,209" sap2010:WorkflowViewState.IdRef="RemoveDataRow_1" RowIndex="0">
                      <ui:RemoveDataRow.DataTable>
                        <InOutArgument x:TypeArguments="sd:DataTable">
                          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">dt_info</CSharpReference>
                        </InOutArgument>
                      </ui:RemoveDataRow.DataTable>
                    </ui:RemoveDataRow>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
            </ueab:ExcelApplicationCard>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ueab:ExcelProcessScopeX>
    <Assign sap:VirtualizedContainerService.HintSize="808,114" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">
          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">str_originalFile</CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">@"Data\교육이수자 명단_{0}.xls"</CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="808,7250" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_2">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="774,7131" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="740,7071" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="본문" sap:VirtualizedContainerService.HintSize="706,6884" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:IsMatch sap2010:Annotation.AnnotationText="학과 이름에 &quot;(문자)&quot; 가 들어갈 경우 True, 아닐경우 False를 반환" BuilderPattern="@&quot;\([^\)]\)&quot;" DisplayName="Is Text Matching" sap:VirtualizedContainerService.HintSize="672,134" sap2010:WorkflowViewState.IdRef="IsMatch_1" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;고급&quot;,&quot;OperationValue&quot;:&quot;@\&quot;\\([^\\)]\\)\&quot;&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;정확히 일치&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="@&quot;\([^\)]\)&quot;" RegexOption="IgnoreCase, Compiled">
                      <ui:IsMatch.Input>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">CurrentRow["학과"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:IsMatch.Input>
                      <ui:IsMatch.Result>
                        <OutArgument x:TypeArguments="x:Boolean">
                          <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">bol_department</CSharpReference>
                        </OutArgument>
                      </ui:IsMatch.Result>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:IsMatch>
                    <If sap2010:Annotation.AnnotationText="위의 Is Text Matching 액티비티에서&#xD;&#xA;&#xD;&#xA;boolean 변수가&#xD;&#xA;&#xD;&#xA;True - 대학원생&#xD;&#xA;&#xD;&#xA;False - 학부생" sap:VirtualizedContainerService.HintSize="672,216" sap2010:WorkflowViewState.IdRef="If_1">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">bol_department</CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="468,165" sap2010:WorkflowViewState.IdRef="Sequence_6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_3">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">str_fileName</CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">string.Format("교육이수자 명단_{0}.xls", "대학원생")</CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,165" sap2010:WorkflowViewState.IdRef="Sequence_7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_2">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">str_fileName</CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">string.Format("교육이수자 명단_{0}.xls", "학부생")</CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                    <Assign sap:VirtualizedContainerService.HintSize="672,114" sap2010:WorkflowViewState.IdRef="Assign_4">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">str_filePath</CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">System.IO.Path.Combine("Output", str_fileName)</CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <If sap2010:Annotation.AnnotationText="파일이 존재하지 않을 경우에만 생성" sap:VirtualizedContainerService.HintSize="672,126" sap2010:WorkflowViewState.IdRef="If_2">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">!File.Exists(str_filePath)</CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,237" sap2010:WorkflowViewState.IdRef="Sequence_8">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:CopyFile ContinueOnError="{x:Null}" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="382,177" sap2010:WorkflowViewState.IdRef="CopyFile_1">
                            <ui:CopyFile.Destination>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">str_filePath</CSharpValue>
                              </InArgument>
                            </ui:CopyFile.Destination>
                            <ui:CopyFile.Path>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">str_originalFile</CSharpValue>
                              </InArgument>
                            </ui:CopyFile.Path>
                          </ui:CopyFile>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89" sap2010:WorkflowViewState.IdRef="Sequence_9">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                      </If.Else>
                    </If>
                    <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" SensitivityLabel="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="672,6234" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" KeepExcelFileOpen="True" ResizeWindow="None" SensitivityOperation="None">
                      <ueab:ExcelApplicationCard.Body>
                        <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="638,5942" sap2010:WorkflowViewState.IdRef="Sequence_11">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueab:ForEachSheetX DisplayName="For Each Excel Sheet" sap:VirtualizedContainerService.HintSize="604,5882" sap2010:WorkflowViewState.IdRef="ForEachSheetX_1">
                              <ueab:ForEachSheetX.Body>
                                <ActivityAction x:TypeArguments="ue:WorksheetQuickHandle, x:Int32">
                                  <ActivityAction.Argument1>
                                    <DelegateInArgument x:TypeArguments="ue:WorksheetQuickHandle" Name="CurrentSheet" />
                                  </ActivityAction.Argument1>
                                  <ActivityAction.Argument2>
                                    <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                  </ActivityAction.Argument2>
                                  <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="570,5695" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ueab:FindReplaceValueX ReplaceWith="{x:Null}" DisplayName="Find/Replace Value" sap:VirtualizedContainerService.HintSize="536,266" sap2010:WorkflowViewState.IdRef="FindReplaceValueX_1" LookIn="Values" Operation="Find">
                                      <ueab:FindReplaceValueX.FoundAt>
                                        <OutArgument x:TypeArguments="x:String">
                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">str_stuIDIndex</CSharpReference>
                                        </OutArgument>
                                      </ueab:FindReplaceValueX.FoundAt>
                                      <ueab:FindReplaceValueX.ValueToFind>
                                        <InArgument x:TypeArguments="x:Object">
                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">CurrentRow["학번"].ToString()</CSharpValue>
                                        </InArgument>
                                      </ueab:FindReplaceValueX.ValueToFind>
                                      <ueab:FindReplaceValueX.WhereToSearch>
                                        <InArgument x:TypeArguments="ue:IReadRangeRef">
                                          <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">CurrentSheet</CSharpValue>
                                        </InArgument>
                                      </ueab:FindReplaceValueX.WhereToSearch>
                                    </ueab:FindReplaceValueX>
                                    <If sap2010:Annotation.AnnotationText="값이 비어있지 않다면 이미 값을 넣은 행이므로 반복 건너뛰기" sap:VirtualizedContainerService.HintSize="536,398" sap2010:WorkflowViewState.IdRef="If_3">
                                      <If.Condition>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">!string.IsNullOrEmpty(str_stuIDIndex)</CSharpValue>
                                        </InArgument>
                                      </If.Condition>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:Continue sap:VirtualizedContainerService.HintSize="382,48" sap2010:WorkflowViewState.IdRef="Continue_1" />
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                    <ueab:FindFirstLastDataRowX FirstRowIndex="{x:Null}" BlankRowsToSkip="1" ColumnName="학번" ConfigureLastRowAs="FirstEmptyRow" DisplayName="Find First/Last Data Row" FirstRowOffset="0" HasHeaders="True" sap:VirtualizedContainerService.HintSize="536,340" sap2010:WorkflowViewState.IdRef="FindFirstLastDataRowX_1" LastRowOffset="0" VisibleRowsOnly="False">
                                      <ueab:FindFirstLastDataRowX.LastRowIndex>
                                        <OutArgument x:TypeArguments="x:Int32">
                                          <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">int_emptyRow</CSharpReference>
                                        </OutArgument>
                                      </ueab:FindFirstLastDataRowX.LastRowIndex>
                                      <ueab:FindFirstLastDataRowX.Range>
                                        <InArgument x:TypeArguments="ue:IReadRangeRef">
                                          <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_69">CurrentSheet.Range["C2"]</CSharpValue>
                                        </InArgument>
                                      </ueab:FindFirstLastDataRowX.Range>
                                    </ueab:FindFirstLastDataRowX>
                                    <If sap:VirtualizedContainerService.HintSize="536,4631" sap2010:WorkflowViewState.IdRef="If_4">
                                      <If.Condition>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">int_emptyRow == 0</CSharpValue>
                                        </InArgument>
                                      </If.Condition>
                                      <If.Then>
                                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="502,2235" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Sequence sap:VirtualizedContainerService.HintSize="468,2175" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_5">
                                              <ueab:WriteCellX.Cell>
                                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">CurrentSheet.Cell["A4"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Cell>
                                              <ueab:WriteCellX.Value>
                                                <InArgument x:TypeArguments="x:Object">
                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">"1"</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Value>
                                            </ueab:WriteCellX>
                                            <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_6">
                                              <ueab:WriteCellX.Cell>
                                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">CurrentSheet.Cell["B4"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Cell>
                                              <ueab:WriteCellX.Value>
                                                <InArgument x:TypeArguments="x:Object">
                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">CurrentRow["학과"].ToString()</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Value>
                                            </ueab:WriteCellX>
                                            <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_7">
                                              <ueab:WriteCellX.Cell>
                                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">CurrentSheet.Cell["C4"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Cell>
                                              <ueab:WriteCellX.Value>
                                                <InArgument x:TypeArguments="x:Object">
                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">CurrentRow["학번"].ToString()</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Value>
                                            </ueab:WriteCellX>
                                            <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_8">
                                              <ueab:WriteCellX.Cell>
                                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">CurrentSheet.Cell["D4"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Cell>
                                              <ueab:WriteCellX.Value>
                                                <InArgument x:TypeArguments="x:Object">
                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">CurrentRow["학년"].ToString()</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Value>
                                            </ueab:WriteCellX>
                                            <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_9">
                                              <ueab:WriteCellX.Cell>
                                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">CurrentSheet.Cell["E4"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Cell>
                                              <ueab:WriteCellX.Value>
                                                <InArgument x:TypeArguments="x:Object">
                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">CurrentRow["이름"].ToString()</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Value>
                                            </ueab:WriteCellX>
                                            <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_10">
                                              <ueab:WriteCellX.Cell>
                                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">CurrentSheet.Cell["F4"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Cell>
                                              <ueab:WriteCellX.Value>
                                                <InArgument x:TypeArguments="x:Object">
                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">CurrentRow["수강구분"].ToString()</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Value>
                                            </ueab:WriteCellX>
                                            <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_11">
                                              <ueab:WriteCellX.Cell>
                                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">CurrentSheet.Cell["G4"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Cell>
                                              <ueab:WriteCellX.Value>
                                                <InArgument x:TypeArguments="x:Object">
                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">CurrentRow["수강상태"].ToString()</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Value>
                                            </ueab:WriteCellX>
                                            <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_12">
                                              <ueab:WriteCellX.Cell>
                                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">CurrentSheet.Cell["H4"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Cell>
                                              <ueab:WriteCellX.Value>
                                                <InArgument x:TypeArguments="x:Object">
                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_38">CurrentRow["출석"].ToString()</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Value>
                                            </ueab:WriteCellX>
                                            <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_13">
                                              <ueab:WriteCellX.Cell>
                                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">CurrentSheet.Cell["I4"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Cell>
                                              <ueab:WriteCellX.Value>
                                                <InArgument x:TypeArguments="x:Object">
                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">CurrentRow["퀴즈"].ToString()</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Value>
                                            </ueab:WriteCellX>
                                            <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_14">
                                              <ueab:WriteCellX.Cell>
                                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">CurrentSheet.Cell["J4"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Cell>
                                              <ueab:WriteCellX.Value>
                                                <InArgument x:TypeArguments="x:Object">
                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">CurrentRow["최종점수"].ToString()</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Value>
                                            </ueab:WriteCellX>
                                            <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,182" sap2010:WorkflowViewState.IdRef="WriteCellX_15">
                                              <ueab:WriteCellX.Cell>
                                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_43">CurrentSheet.Cell["K4"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Cell>
                                              <ueab:WriteCellX.Value>
                                                <InArgument x:TypeArguments="x:Object">
                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_44">CurrentRow["구분"].ToString()</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Value>
                                            </ueab:WriteCellX>
                                          </Sequence>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="502,2235" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Sequence sap:VirtualizedContainerService.HintSize="468,2175" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_16">
                                              <ueab:WriteCellX.Cell>
                                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">CurrentSheet.Cell[$"A{int_emptyRow}"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Cell>
                                              <ueab:WriteCellX.Value>
                                                <InArgument x:TypeArguments="x:Object">
                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">(int_emptyRow-3).ToString()</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Value>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ueab:WriteCellX>
                                            <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_17">
                                              <ueab:WriteCellX.Cell>
                                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_47">CurrentSheet.Cell[$"B{int_emptyRow}"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Cell>
                                              <ueab:WriteCellX.Value>
                                                <InArgument x:TypeArguments="x:Object">
                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_48">CurrentRow["학과"].ToString()</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Value>
                                            </ueab:WriteCellX>
                                            <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_18">
                                              <ueab:WriteCellX.Cell>
                                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_49">CurrentSheet.Cell[$"C{int_emptyRow}"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Cell>
                                              <ueab:WriteCellX.Value>
                                                <InArgument x:TypeArguments="x:Object">
                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_50">CurrentRow["학번"].ToString()</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Value>
                                            </ueab:WriteCellX>
                                            <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_19">
                                              <ueab:WriteCellX.Cell>
                                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_51">CurrentSheet.Cell[$"D{int_emptyRow}"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Cell>
                                              <ueab:WriteCellX.Value>
                                                <InArgument x:TypeArguments="x:Object">
                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">CurrentRow["학년"].ToString()</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Value>
                                            </ueab:WriteCellX>
                                            <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_20">
                                              <ueab:WriteCellX.Cell>
                                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_53">CurrentSheet.Cell[$"E{int_emptyRow}"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Cell>
                                              <ueab:WriteCellX.Value>
                                                <InArgument x:TypeArguments="x:Object">
                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_54">CurrentRow["이름"].ToString()</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Value>
                                            </ueab:WriteCellX>
                                            <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_21">
                                              <ueab:WriteCellX.Cell>
                                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_55">CurrentSheet.Cell[$"F{int_emptyRow}"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Cell>
                                              <ueab:WriteCellX.Value>
                                                <InArgument x:TypeArguments="x:Object">
                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_56">CurrentRow["수강구분"].ToString()</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Value>
                                            </ueab:WriteCellX>
                                            <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_22">
                                              <ueab:WriteCellX.Cell>
                                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_57">CurrentSheet.Cell[$"G{int_emptyRow}"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Cell>
                                              <ueab:WriteCellX.Value>
                                                <InArgument x:TypeArguments="x:Object">
                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_58">CurrentRow["수강상태"].ToString()</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Value>
                                            </ueab:WriteCellX>
                                            <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_23">
                                              <ueab:WriteCellX.Cell>
                                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_59">CurrentSheet.Cell[$"H{int_emptyRow}"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Cell>
                                              <ueab:WriteCellX.Value>
                                                <InArgument x:TypeArguments="x:Object">
                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_60">CurrentRow["출석"].ToString()</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Value>
                                            </ueab:WriteCellX>
                                            <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_24">
                                              <ueab:WriteCellX.Cell>
                                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_61">CurrentSheet.Cell[$"I{int_emptyRow}"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Cell>
                                              <ueab:WriteCellX.Value>
                                                <InArgument x:TypeArguments="x:Object">
                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_62">CurrentRow["퀴즈"].ToString()</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Value>
                                            </ueab:WriteCellX>
                                            <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_25">
                                              <ueab:WriteCellX.Cell>
                                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_63">CurrentSheet.Cell[$"J{int_emptyRow}"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Cell>
                                              <ueab:WriteCellX.Value>
                                                <InArgument x:TypeArguments="x:Object">
                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_64">CurrentRow["최종점수"].ToString()</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Value>
                                            </ueab:WriteCellX>
                                            <ueab:WriteCellX DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,182" sap2010:WorkflowViewState.IdRef="WriteCellX_26">
                                              <ueab:WriteCellX.Cell>
                                                <InArgument x:TypeArguments="ue:IReadWriteCellRef">
                                                  <CSharpValue x:TypeArguments="ue:IReadWriteCellRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_65">CurrentSheet.Cell[$"K{int_emptyRow}"]</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Cell>
                                              <ueab:WriteCellX.Value>
                                                <InArgument x:TypeArguments="x:Object">
                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_66">CurrentRow["구분"].ToString()</CSharpValue>
                                                </InArgument>
                                              </ueab:WriteCellX.Value>
                                            </ueab:WriteCellX>
                                          </Sequence>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </ActivityAction>
                              </ueab:ForEachSheetX.Body>
                              <ueab:ForEachSheetX.Workbook>
                                <InArgument x:TypeArguments="ue:IWorkbookQuickHandle">
                                  <CSharpValue x:TypeArguments="ue:IWorkbookQuickHandle" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">Excel</CSharpValue>
                                </InArgument>
                              </ueab:ForEachSheetX.Workbook>
                            </ueab:ForEachSheetX>
                          </Sequence>
                        </ActivityAction>
                      </ueab:ExcelApplicationCard.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueab:ExcelApplicationCard.WorkbookPath>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">str_filePath</CSharpValue>
                        </InArgument>
                      </ueab:ExcelApplicationCard.WorkbookPath>
                    </ueab:ExcelApplicationCard>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
              <ui:ForEachRow.DataTable>
                <InArgument x:TypeArguments="sd:DataTable">
                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">dt_info</CSharpValue>
                </InArgument>
              </ui:ForEachRow.DataTable>
            </ui:ForEachRow>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
    </ueab:ExcelProcessScopeX>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Main_2_Upload - 워크플로우 파일 호출 (Main_2_Upload.xaml)" sap:VirtualizedContainerService.HintSize="808,195" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Main_2_Upload.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="i_dt_info">
          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_68">dt_info</CSharpValue>
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>